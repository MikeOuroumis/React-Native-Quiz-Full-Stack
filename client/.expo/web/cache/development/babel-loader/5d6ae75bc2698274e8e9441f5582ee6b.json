{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport RegisterScreen from \"./RegisterScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function LoginScreen(props) {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      children: \"Login\"\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    marginHorizontal: 16\n  },\n  title: {\n    textAlign: \"center\",\n    marginVertical: 8\n  },\n  fixToText: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: \"#737373\",\n    borderBottomWidth: StyleSheet.hairlineWidth\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Button","RegisterScreen","LoginScreen","props","styles","container","StyleSheet","create","flex","justifyContent","marginHorizontal","title","textAlign","marginVertical","fixToText","flexDirection","separator","borderBottomColor","borderBottomWidth","hairlineWidth"],"sources":["C:/Users/micha/Desktop/AwesomeProject/components/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport RegisterScreen from \"./RegisterScreen\";\r\nimport { View, Text } from \"react-native\";\r\n\r\nexport default function LoginScreen(props) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Login</Text>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n  fixToText: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  separator: {\r\n    marginVertical: 8,\r\n    borderBottomColor: \"#737373\",\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n  },\r\n});\r\n// const [user, setUser] = React.useState({\r\n//   email: \"\",\r\n//   password: \"\",\r\n// });\r\n// const [errorMessages, setErrorMessages] = React.useState({});\r\n// let [usersArray, setUsersArray] = useState([]);\r\n// let [userExists, setUserExists] = useState(false);\r\n// let userIndex = null;\r\n// let curUserEmail;\r\n// let curUserPassword;\r\n// useEffect(() => {\r\n//   //logic for getting a value from local storage stored under the key 'key'\r\n//   const data = localStorage.getItem(\"usersArray\");\r\n//   //if data is null don't run the next line...\r\n//   data && setUsersArray(JSON.parse(data));\r\n//   if (data) usersArray = JSON.parse(data);\r\n// }, []);\r\n// function handleChange(event) {\r\n//   setUser((prevUser) => ({\r\n//     ...prevUser,\r\n//     [event.target.name]: event.target.value,\r\n//   }));\r\n// }\r\n// function handleSubmit(event) {\r\n//   event.preventDefault();\r\n//   setErrorMessages(validation());\r\n//   //Does user exist?\r\n//   for (const item of usersArray) {\r\n//     if (user.email === item.email) {\r\n//       setUserExists(true);\r\n//       userExists = true;\r\n//       //index to match the email and password later...\r\n//       console.log(`item: ${usersArray.indexOf(item)}`);\r\n//       userIndex = usersArray.indexOf(item);\r\n//       console.log(usersArray[userIndex].email);\r\n//       break;\r\n//     } else {\r\n//       setUserExists(false);\r\n//       userExists = false;\r\n//     }\r\n//   }\r\n//   curUserEmail = usersArray[userIndex].email;\r\n//   curUserPassword = usersArray[userIndex].password;\r\n//   //if the password is correct then login...\r\n//   if (curUserPassword === event.target.password.value) {\r\n//     console.log(\"logged in\");\r\n//     //here must follow the login code...\r\n//     //pass user data to App.js\r\n//     //pass userIndex to App.js\r\n//     const currentUser = usersArray[userIndex];\r\n//     //how to pass currentUser to App.js\r\n//     //sends the user index to App.js\r\n//     props.setUserIndex(userIndex);\r\n//     return currentUser;\r\n//   }\r\n//   if (userExists) console.log(\"user exists\");\r\n//   else console.log(\"user doesn't exist\");\r\n// }\r\n// function validation() {\r\n//   const errors = {};\r\n//   if (user.email.trim() === \"\") errors.email = \"Please fill in the email\";\r\n//   if (user.password.trim() === \"\")\r\n//     errors.password = \"Please fill in the password\";\r\n//   return errors;\r\n// }\r\n// return (\r\n//   <View className=\"quiz-container\">\r\n//     <Text style={{ color: \"#0c88fb\" }}>Login</Text>\r\n//     <View>\r\n//       {/* <form onSubmit={handleSubmit}> */}\r\n//       <label style={{ color: \"white\" }}>Email</label>\r\n//       <input\r\n//         id=\"email\"\r\n//         placeholder=\"email\"\r\n//         onChange={handleChange}\r\n//         className=\"form-control\"\r\n//         name=\"email\"\r\n//         value={user.email}\r\n//       ></input>\r\n//       {errorMessages.email && (\r\n//         <div className=\"errorMessages\">{errorMessages.email}</div>\r\n//       )}\r\n//       <label style={{ color: \"white\" }}>Password</label>\r\n//       <input\r\n//         type=\"password\"\r\n//         id=\"password\"\r\n//         placeholder=\"password\"\r\n//         onChange={handleChange}\r\n//         className=\"form-control\"\r\n//         name=\"password\"\r\n//         value={user.password}\r\n//       ></input>\r\n//       {errorMessages.password && (\r\n//         <Text className=\"errorMessages\">{errorMessages.password}</Text>\r\n//       )}\r\n//       <Button title=\"Submit\" />\r\n//     </View>\r\n//     {/* </form> */}\r\n//     <div>\r\n//       New user? Register{\" \"}\r\n//       <button\r\n//         className=\"btn btn-link\"\r\n//         onClick={props.registerLogilToggle}\r\n//         style={{ padding: \"0\", marginTop: \"-5px\" }}\r\n//       >\r\n//         here\r\n//       </button>\r\n//     </div>\r\n//   </View>\r\n// );\r\n// }\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM;AACb,OAAOC,cAAc;AAAyB;AAAA;AAAA;AAG9C,eAAe,SAASC,WAAW,CAACC,KAAK,EAAE;EACzC,OACE,KAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UAC5B,KAAC,IAAI;MAAA;IAAA;EAAa,EACb;AAEX;AACA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,gBAAgB,EAAE;EACpB,CAAC;EACDC,KAAK,EAAE;IACLC,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE;EAClB,CAAC;EACDC,SAAS,EAAE;IACTC,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE;EAClB,CAAC;EACDO,SAAS,EAAE;IACTH,cAAc,EAAE,CAAC;IACjBI,iBAAiB,EAAE,SAAS;IAC5BC,iBAAiB,EAAEZ,UAAU,CAACa;EAChC;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}